name: Build & Deploy

on:
  push:
    tags:
      - 'v*'

env:
  DOCKER_LOGIN: simple2b
  IMAGE_BACK: simple2b/paris
  DEPLOY_HOST: ${{ secrets.DEVELOP_HOST }}
  DEPLOY_USER_NAME: ${{ secrets.DEVELOP_USERNAME }}
  DEPLOY_SSH_KEY: ${{ secrets.DEVELOP_SSH_KEY }}
  DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
  STAGING_FOLDER: '~/paris/'

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]
        poetry-version: [1.5.1]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        working-directory: .
        run: |
          poetry install
      - name: Lint with flake8
        working-directory: .
        run: |
          poetry run flake8 . --count --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Run pytest
        working-directory: .
        run: |
          poetry run pytest
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_LOGIN }}
          password: ${{ env.DOCKER_ACCESS_TOKEN }}
      - name: Build and Push docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE_BACK }}:latest
      - name: update compose file
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER_NAME }}
          key: ${{ env.DEPLOY_SSH_KEY }}
          source: docker-compose.staging.yaml
          target: ${{ env.STAGING_FOLDER }}
      - name: deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER_NAME }}
          key: ${{ env.DEPLOY_SSH_KEY }}
          script: |
            cd ${{ env.STAGING_FOLDER }} &&
            mv docker-compose.staging.yaml docker-compose.yaml &&
            docker-compose pull &&
            docker-compose up -d &&
            docker system prune -f
